emqx_exhook_schema {

  servers {
    desc {
      en: "List of exhook servers"
      zh: "ExHook 服务器列表"
    }
  }

  name {
    desc {
      en: "Name of the exhook server"
      zh: "ExHook 服务器名称"
    }
  }

  enable {
    desc {
      en: "Enable this Exhook server"
      zh: "开启这个 Exhook 服务器"
    }
  }

  url {
    desc {
      en: "URL of the gRPC server"
      zh: "gRPC 服务器地址"
    }
  }

  request_timeout {
    desc {
      en: "The timeout of request gRPC server"
      zh: "gRPC 服务器请求超时时间"
    }
  }

  failed_action {
    desc {
      en: "The value that is returned when the request to the gRPC server fails for any reason"
      zh: "当 gRPC 请求失败后的操作"
    }
  }

  auto_reconnect {
    desc {
      en: """Whether to automatically reconnect (initialize) the gRPC server.
When gRPC is not available, Exhook tries to request the gRPC service at that interval and reinitialize the list of mounted hooks."""
      zh: """自动重连到 gRPC 服务器的设置。
当 gRPC 服务器不可用时，Exhook 将会按照这里设置的间隔时间进行重连，并重新初始化注册的钩子"""
    }
  }

  pool_size {
    desc {
      en: "The process pool size for gRPC client"
      zh: "gRPC 客户端进程池大小"
    }
  }

  socket_options {
    desc {
      en: "Connection socket options"
      zh: "连接套接字设置"
    }
  }

  keepalive {
    desc {
      en: """Enables/disables periodic transmission on a connected socket when no other data is exchanged.
If the other end does not respond, the connection is considered broken and an error message is sent to the controlling process."""
      zh: """当没有其他数据交换时，是否向连接的对端套接字定期的发送探测包。如果另一端没有响应，则认为连接断开，并向控制进程发送错误消息"""
    }
  }

  nodelay {
    desc {
      en: """If true, option TCP_NODELAY is turned on for the socket,
which means that also small amounts of data are sent immediately"""
      zh: "如果为 true，则为套接字设置 TCP_NODELAY 选项，这意味着会立即发送数据包"
    }
  }

  recbuf {
    desc {
      en: "The minimum size of receive buffer to use for the socket"
      zh: "套接字的最小接收缓冲区大小"
    }
  }

  sndbuf {
    desc {
      en: "The minimum size of send buffer to use for the socket"
      zh: "套接字的最小发送缓冲区大小"
    }
  }
}
