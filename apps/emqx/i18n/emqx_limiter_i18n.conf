emqx_limiter_schema {

  failure_strategy {
    desc {
      en: """The strategy when all the retries failed."""
      zh: """当所有的重试都失败后的处理策略"""
    }
    label: {
      en: """Failure Strategy"""
      zh: """失败策略"""
    }
  }

  max_retry_time {
    desc {
      en: """The maximum retry time when acquire failed."""
      zh: """申请失败后，尝试重新申请的时长最大值"""
    }
    label: {
      en: """Max Retry Time"""
      zh: """最大重试时间"""
    }
  }

  divisible {
    desc {
      en: """Is it possible to split the number of requested tokens?"""
      zh: """申请的令牌数是否可以被分割"""
    }
    label: {
      en: """Divisible"""
      zh: """是否可分割"""
    }
  }

  client_bucket_capacity {
    desc {
      en: """The capacity of per user."""
      zh: """每个使用者的令牌容量上限"""
    }
    label: {
      en: """Capacity"""
      zh: """容量"""
    }
  }

  capacity {
    desc {
      en: """The capacity of this token bucket."""
      zh: """该令牌桶的容量"""
    }
    label: {
      en: """Capacity"""
      zh: """容量"""
    }
  }

  low_watermark {
    desc {
      en: """If the remaining tokens are lower than this value,
the check/consume will succeed, but it will be forced to wait for a short period of time."""
      zh: """当桶中剩余的令牌数低于这个值，即使令牌申请成功了，也会被强制暂停一会儿"""
    }
    label: {
      en: """Low Watermark"""
      zh: """低水位线"""
    }
  }

  initial {
    desc {
      en: """The initial number of tokens for this bucket."""
      zh: """桶中的初始令牌数"""
    }
    label: {
      en: """Initial"""
      zh: """初始令牌数"""
    }
  }

  rate {
    desc {
      en: """Rate for this bucket."""
      zh: """桶的令牌生成速率"""
    }
    label: {
      en: """Rate"""
      zh: """速率"""
    }
  }

  client {
    desc {
      en: """The rate limit for each user of the bucket"""
      zh: """对桶的每个使用者的速率控制设置"""
    }
    label: {
      en: """Per Client"""
      zh: """每个使用者的限制"""
    }
  }

  bucket_cfg {
    desc {
      en: """Bucket Configs"""
      zh: """桶的配置"""
    }
    label: {
      en: """Buckets"""
      zh: """桶的配置"""
    }
  }

  burst {
    desc {
      en: """The burst, This value is based on rate.</br>
 This value + rate = the maximum limit that can be achieved when limiter burst."""
      zh: """突发速率。
突发速率允许短时间内速率超过设置的速率值，突发速率 + 速率 = 当前桶能达到的最大速率值"""
    }
    label: {
      en: """Burst"""
      zh: """突发速率"""
    }
  }

  message_routing {
    desc {
      en: """The message routing limiter.
This is used to limit the forwarding rate for this EMQX node.
Once the limit is reached, new publish will be refused"""
      zh: """消息派发速率控制器。
这个用来控制当前节点内的消息派发速率，当达到最大速率后，新的推送将会被拒绝"""
    }
    label: {
      en: """Message Routing"""
      zh: """消息派发"""
    }
  }

  connection {
    desc {
      en: """The connection limiter.
This is used to limit the connection rate for this EMQX node.
Once the limit is reached, new connections will be refused"""
      zh: """连接速率控制器。
这个用来控制当前节点上的连接速率，当达到最大速率后，新的连接将会被拒绝"""
    }
    label: {
      en: """Connection"""
      zh: """连接速率"""
    }
  }

  message_in {
    desc {
      en: """The message in limiter.
This is used to limit the inbound message numbers for this EMQX node
Once the limit is reached, the restricted client will be slow down even be hung for a while."""
      zh: """流入速率控制器。
这个用来控制当前节点上的消息流入速率，当达到最大速率后，会话将会被限速甚至被强制挂起一小段时间"""
    }
    label: {
      en: """Message In"""
      zh: """消息流入速率"""
    }
  }

  bytes_in {
    desc {
      en: """The bytes_in limiter.
This is used to limit the inbound bytes rate for this EMQX node.
Once the limit is reached, the restricted client will be slow down even be hung for a while."""
      zh: """流入字节率控制器.
这个是用来控制当前节点上的数据流入的字节率，每条消息将会消耗和其二进制大小等量的令牌，当达到最大速率后，会话将会被限速甚至被强制挂起一小段时间"""
    }
    label: {
      en: """Bytes In"""
      zh: """流入字节率"""
    }
  }

  internal {
    desc {
      en: """Limiter for EMQX internal app."""
      zh: """EMQX 内部功能所用限制器。"""

    }
  }
}
